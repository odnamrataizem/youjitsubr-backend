// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id                String   @id @default(cuid())
  name              String   @default("")
  slug              String   @unique @default("")
  description       Json     @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  picture_filesize  Int?
  picture_extension String?
  picture_width     Int?
  picture_height    Int?
  picture_id        String?
  email             String   @unique @default("")
  password          String
  roles             Json     @default("[]")
  posts             Post[]   @relation("Post_authors")
  active            Boolean  @default(true)
  createdAt         DateTime @default(now())
}

model Page {
  id              String   @id @default(cuid())
  title           String   @default("")
  slug            String   @unique @default("")
  content         Json     @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  cover_filesize  Int?
  cover_extension String?
  cover_width     Int?
  cover_height    Int?
  cover_id        String?
  weight          Int
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now()) @updatedAt
}

model Post {
  id              String         @id @default(cuid())
  title           String         @default("")
  slug            String         @unique @default("")
  lead            String         @default("")
  content         Json           @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  cover_filesize  Int?
  cover_extension String?
  cover_width     Int?
  cover_height    Int?
  cover_id        String?
  authors         User[]         @relation("Post_authors")
  category        Category?      @relation("Post_category", fields: [categoryId], references: [id])
  categoryId      String?        @map("category")
  tags            Tag[]          @relation("Post_tags")
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @default(now()) @updatedAt
  status          PostStatusType @default(DRAFT)
  publishedAt     DateTime?
  sticky          Boolean        @default(false)

  @@index([categoryId])
}

model Tag {
  id        String   @id @default(cuid())
  name      String   @default("")
  slug      String   @unique @default("")
  posts     Post[]   @relation("Post_tags")
  createdAt DateTime @default(now())
}

model Category {
  id              String   @id @default(cuid())
  name            String   @default("")
  slug            String   @unique @default("")
  description     Json     @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  cover_filesize  Int?
  cover_extension String?
  cover_width     Int?
  cover_height    Int?
  cover_id        String?
  posts           Post[]   @relation("Post_category")
  createdAt       DateTime @default(now())
}

enum PostStatusType {
  DRAFT
  PUBLISHED
}
